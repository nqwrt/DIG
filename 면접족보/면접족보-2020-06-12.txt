1.thread 란 무엇인가?
2.Thread 를 생성 시키는 두가지 방법은?
3.데몬 쓰레드란 무엇인가?
4.시멘틱 에 대하여 설명하시오.
5.#id 와 .class 의 차이점을 설명하시오.
6.BankAccount 에서, 마이너스 값이 나오는 이유를 설명하시오.
7. 메뉴 html 을 완성하시오.
====

  <div id="wrap">
        <div id="content">
            <h1>CONTENT</h1>
            <ul>
                <li class="menu1">menu1</li>
                <li class="menu2">menu2</li>
                <li class="menu3">menu3</li>
                <li class="menu4">menu4</li>
                <li class="menu5">menu5</li>
            </ul>
        </div>
        <div id="side_banner">
            <h1>BANNER</h1>
            <a href="http://www.sba.seoul.kr" target="_blank"><img src="http://www.sba.seoul.kr/kr/images/footer/f_logo.png"></a>
        </div>
    </div>

jsp/servlet
https://www.youtube.com/watch?v=Aw-lOlR0I28&list=PL6qV-iipFkkDt6MAIRUrl8Vkh6iKQJrqD


class ThreadWithClass extends Thread {

	@Override
    public void run() {

        for (int i = 0; i < 5; i++) {
            System.out.println(getName()); // 현재 실행 중인 스레드의 이름을 반환함.

            try {
                Thread.sleep(10);          // 0.01초간 스레드를 멈춤.

            } catch (InterruptedException e) {
                e.printStackTrace();

            }
        }
    }
}

class ThreadWithRunnable implements Runnable {

	@Override
    public void run() {

        for (int i = 0; i < 5; i++) {

            System.out.println(Thread.currentThread().getName()); // 현재 실행 중인 스레드의 이름을 반환함.

            try {

                Thread.sleep(10);

            } catch (InterruptedException e) {

                e.printStackTrace();

            }

        }

    }

}

public class GithubTest {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
        ThreadWithClass thread1 = new ThreadWithClass();       // Thread 클래스를 상속받는 방법
        Thread thread2 = new Thread(new ThreadWithRunnable()); // Runnable 인터페이스를 구현하는 방법

        thread1.start(); // 스레드의 실행
        thread2.start(); // 스레드의 실행
	}

}
